version: '3.8'

services:
  testcraftworld:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
      - PORT=5000
      - DATABASE_URL=${DATABASE_URL}
      - ADMIN_TOKEN=${ADMIN_TOKEN}
      - TEST_ADMIN_USERNAME=${TEST_ADMIN_USERNAME}
      - TEST_ADMIN_PASSWORD=${TEST_ADMIN_PASSWORD}
      - TEST_ADMIN_EMAIL=${TEST_ADMIN_EMAIL}
      - TEST_AUTHOR_USERNAME=${TEST_AUTHOR_USERNAME}
      - TEST_AUTHOR_PASSWORD=${TEST_AUTHOR_PASSWORD}
      - TEST_AUTHOR_EMAIL=${TEST_AUTHOR_EMAIL}
    depends_on:
      - postgres
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=testcraftworld
      - POSTGRES_USER=bloguser
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U bloguser -d testcraftworld"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data: